<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大师兄</title>
  <subtitle>请叫我大师兄</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-17T08:13:56.792Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>李学凯</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为什么写博客</title>
    <link href="http://yoursite.com/2017/06/17/%E5%95%A6%E5%95%A6%E5%95%A6/"/>
    <id>http://yoursite.com/2017/06/17/啦啦啦/</id>
    <published>2017-06-17T06:03:08.000Z</published>
    <updated>2017-06-17T08:13:56.792Z</updated>
    
    <content type="html"><![CDATA[<p>古之学者必有师。师者，所以传道受业解惑也。知识，因为乐于分享，才薪尽火传，源远流长。<br><a id="more"></a></p>
<h2 id="重点是博客的内容"><a href="#重点是博客的内容" class="headerlink" title="重点是博客的内容"></a>重点是博客的内容</h2><ol>
<li>不是生活杂记、不是流水账、不是牢骚、不是抱怨、不是心情琐记……；</li>
<li>有目的地写，要务实，追求质量；</li>
<li>记录自己学习、思考、总结的过程；</li>
<li>分享自己的故事、所得、感想、经验；</li>
</ol>
<h2 id="写的原因"><a href="#写的原因" class="headerlink" title="写的原因"></a>写的原因</h2><ol>
<li>提供持续学习的动力</li>
<li>积累更多的知识</li>
<li>提高将事情讲清楚的能力</li>
<li>记录成长</li>
</ol>
<h2 id="About-Me"><a href="#About-Me" class="headerlink" title="About Me"></a>About Me</h2><ul>
<li>QQ：<a href="http://blog.csdn.net/qq_27093465?viewmode=contents" title="我的qq号" target="_blank" rel="external">1181415316</a></li>
<li>Email：  <a href="http://mail.163.com/" title="我的邮箱" target="_blank" rel="external">cmshome@163.com</a></li>
<li>GitHub： <a href="https://github.com/cmshome" title="我的GitHub" target="_blank" rel="external">Please Call Me Big Brother.</a></li>
<li>CSDN：   <a href="http://blog.csdn.net/qq_27093465?viewmode=contents" title="我的CSDN" target="_blank" rel="external">请叫我大师兄</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;古之学者必有师。师者，所以传道受业解惑也。知识，因为乐于分享，才薪尽火传，源远流长。&lt;br&gt;
    
    </summary>
    
    
      <category term="讲道理" scheme="http://yoursite.com/tags/%E8%AE%B2%E9%81%93%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Java 项目readme.md文件</title>
    <link href="http://yoursite.com/2017/06/16/test/"/>
    <id>http://yoursite.com/2017/06/16/test/</id>
    <published>2017-06-16T06:03:08.000Z</published>
    <updated>2017-06-16T06:52:18.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld  "></a>HelloWorld  <img src="https://github.com/jsw0528/rails_emoji/raw/master/vendor/assets/images/emojis/kiss.png" alt=":kiss:" title="烈焰红唇"></h1><p>这个是我的一个Java测试项目的read.md文件，主要是说各种Java疑惑之处的测试。<br><a id="more"></a></p>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="#简要说明">Introduction</a></li>
<li><a href="#漫漫人生路">Life</a></li>
<li><a href="#about-me">About me</a></li>
<li><a href="#copyright-and-license">Copyright and License</a></li>
</ul>
<h2 id="简要说明"><a href="#简要说明" class="headerlink" title="简要说明"></a>简要说明</h2><p><a href="http://blog.csdn.net/qq_27093465?viewmode=contents" title="我的CSDN" target="_blank" rel="external">各种Java相关的测试代码:倒序</a></p>
<ul>
<li>读写properties文件测试</li>
<li>如何写好一个readme.md文件</li>
<li>学习HashMap 1.8源码中的put方法</li>
<li>测试for循环，第三个条件是i++和++i的差别，发现效果是一样的</li>
<li>测试Java类的成员和初始化块（代码块）初始化顺序</li>
<li>打印螺旋蛇形矩阵的代码</li>
<li>枚举类型值的比较：可以直接使用==来判断，不一定非得使用equals方法</li>
<li>工厂模式的实现-饱汉式，饿汉式，双重锁形式。三种实现方式。</li>
<li>使用Collections.emptyList()的作用好处和注意的地方</li>
<li>正确实现Java的clone方法</li>
<li>SimpleDateFormat 线程不安全的，所以不能声明为静态变量</li>
<li>spring 依赖注入，控制反转，(ioc，di)，使用注解实现。</li>
<li>pom.xml各个选项配置的解释</li>
<li>Date ping = new Date(1490084570000L);</li>
<li>Calendar.get(int )方法测试</li>
<li>添加默认无参构造函数，测试bean中普通类型 int 在未初始化时，是有默认值0的，不是null</li>
<li>同类型的两个对象比较属性值，得到不同属性的名称和对应的值</li>
<li>测试list的toString方法，普通类型会打印成数组的格式，要是自定义的对象，若不重写toString方法，则会打印为内存的地址，而不是对象的toString结果</li>
<li>二维数组的初始化</li>
<li>求1-100的素数测试</li>
<li>javadoc中{@link}与@see的简单使用以及区别</li>
<li>测试Java的clone方法： 1，要实现Cloneable接口 2，对象是地址传递，不同地方引用，修改的是同一个数据。</li>
<li>@see 标签允许用户引用其他类的文档。 @see classname @see fully-qualified-classname @see fully-qualified-classname#method-name</li>
<li>使用guava工具类来取List集合的差集：Sets.difference(e1,e2)</li>
<li>“\r\n”,后台或者文件内换行;<br>,拼在字符串中，可以在前台换行.</li>
<li>Java中普通代码块，构造代码块，静态代码块区别及代码示例</li>
<li>java反射中，Class.forName和classloader的区别: class.forName()除了将类的.class文件加载到jvm中之外，还会对类进行解释，执行类中的static块。</li>
<li>guava工具类求list和map集合的差集</li>
<li>{@link CodeBlockModel#name}注释中如何使用@link</li>
<li>代码块的测试</li>
<li>封装基本数据类型，直接字符串和new字符串，在作为函数参数时，都是值传递。</li>
<li>List集合初始化固定大小之后，未初始化list集合的内容，直接修改下标为n的值，即set(index,value)，就会数组越界异常</li>
<li>字符串常量池的理解和测试，补充上简单的理论知识。</li>
<li>Arrays.copyOf 复制时地址引用问题的测试</li>
<li>字符串比较的问题：使用 == 和equal方法的异同的测试</li>
<li>题目：输入一个整数n，求从1到n这n个整数的十进制表示中1出现的次数。</li>
<li>求答案 ？ 一筐鸡蛋： 1个1个拿，正好拿完。 2个2个拿，还剩1个。 3个3个拿，正好拿完。 4个4个拿，还剩1个。 5个5个拿，还差1个。 6个6个拿，还剩3个。 7个7个拿，还剩4个。 8个8个拿，还剩1个。 9个9个拿，正好拿完。</li>
<li>字符串函数split操作之后生成的数组的长度测试，与预测的不一样</li>
<li>测试重写：@override</li>
<li>修正枚举类型命名，按照命名规范命名：以Enum结尾</li>
<li>数字格式化测试</li>
<li>float 类型保留n位小数</li>
<li>long 类型转 float 测试</li>
<li>测试字符串split分成数组之后的长度问题以及生成的数组是不是null</li>
<li>sigar-获得系统信息实例</li>
<li>boolean属性值的getter和setter特殊地方</li>
<li>枚举带参数的进一步理解</li>
<li>日期UTC标准时</li>
<li>jdbc和spring结合：声明式事物处理。</li>
<li>spring和jdbc声明式事物处理xml配置实现。</li>
<li>jdbc两种方式配置连接池，并测试写入数据到DB。</li>
<li>spring AOP 配置分组：xml和注解</li>
<li>spring AOP配置可运行版</li>
<li>AOP概念整理</li>
<li>jdk动态代理模式代码实现</li>
<li>静态代理模式代码</li>
<li>装饰设计模式简单实现</li>
<li>文件流测试</li>
</ul>
<h2 id="漫漫人生路"><a href="#漫漫人生路" class="headerlink" title="漫漫人生路"></a>漫漫人生路</h2><p><img src="http://forum.csdn.net/PointForum/ui/scripts/csdn/Plugin/003/onion/41.gif" alt="begin" title="刚刚毕业，好好学习。"> <img src="http://forum.csdn.net/PointForum/ui/scripts/csdn/Plugin/003/onion/83.gif" alt="going on" title="渐入佳境，高调装逼。"> <img src="http://forum.csdn.net/PointForum/ui/scripts/csdn/Plugin/003/onion/2.gif" alt="going on" title="最高境界，低调低调。"></p>
<h2 id="About-Me"><a href="#About-Me" class="headerlink" title="About Me"></a>About Me</h2><ul>
<li>QQ：<a href="http://blog.csdn.net/qq_27093465?viewmode=contents" title="我的qq号" target="_blank" rel="external">1181415316</a></li>
<li>Email：  <a href="http://mail.163.com/" title="我的邮箱" target="_blank" rel="external">cmshome@163.com</a></li>
<li>GitHub： <a href="https://github.com/cmshome" title="我的GitHub" target="_blank" rel="external">Please Call Me Big Brother.</a></li>
<li>CSDN：   <a href="http://blog.csdn.net/qq_27093465?viewmode=contents" title="我的CSDN" target="_blank" rel="external">请叫我大师兄</a></li>
</ul>
<h2 id="Copyright-and-License"><a href="#Copyright-and-License" class="headerlink" title="Copyright and License"></a>Copyright and License</h2><p><strong>The MIT License (MIT)</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HelloWorld&quot;&gt;&lt;a href=&quot;#HelloWorld&quot; class=&quot;headerlink&quot; title=&quot;HelloWorld  &quot;&gt;&lt;/a&gt;HelloWorld  &lt;img src=&quot;https://github.com/jsw0528/rails_emoji/raw/master/vendor/assets/images/emojis/kiss.png&quot; alt=&quot;:kiss:&quot; title=&quot;烈焰红唇&quot;&gt;&lt;/h1&gt;&lt;p&gt;这个是我的一个Java测试项目的read.md文件，主要是说各种Java疑惑之处的测试。&lt;br&gt;
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World -- hexo</title>
    <link href="http://yoursite.com/2017/06/10/hello/"/>
    <id>http://yoursite.com/2017/06/10/hello/</id>
    <published>2017-06-10T06:03:08.000Z</published>
    <updated>2017-06-16T06:48:34.816Z</updated>
    
    <content type="html"><![CDATA[<p>这个是安装完hexo之后，自动生成的hello world 示例。<br><a id="more"></a><br>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个是安装完hexo之后，自动生成的hello world 示例。&lt;br&gt;
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
